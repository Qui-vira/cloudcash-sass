@use "sass:list";
@use "sass:map";
@use "sass:color";

@mixin grid-baseline($step-size, $sub-divisions, $grid-color) {
  $values: ();
  $step: calc($step-size / $sub-divisions);
  @for $i from 0 to $sub-divisions {
    $opacity: 1;
    $color: $grid-color;
    $start-point: $i * $step;

    @if ($i > 0) {
      $opacity: 0.2;
      $color: color.change(
        $color: $color,
        $alpha: 0.2,
      );
    }

    $values: list.append(
      $values,
      #{"#{$color} #{$start-point} #{$start-point + 1}"},
      $separator: comma
    );

    $values: list.append(
      $values,
      #{"transparent #{$start-point + 1} #{$start-point + $step}"},
      $separator: comma
    );
  }
  background: linear-gradient(to bottom, #{$values});
  background-size: auto $step-size;
}

.test {
  background: linear-gradient(
    to bottom,
    rgba(red, 1) 1px,
    transparent 1px 4px,
    rgba(red, 0.2) 4px 5px,
    transparent 5px 8px,
    rgba(red, 0.2) 8px 9px,
    transparent 9px 12px,
    rgba(red, 0.2) 12px 13px,
    transparent 13px 16px,
    rgba(red, 0.2) 16px 17px,
    transparent 17px 20px,
    rgba(red, 0.2) 20px 21px,
    transparent 21px,
    transparent
  );
  background-size: auto 1rem;
}
